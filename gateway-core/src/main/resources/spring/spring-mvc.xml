<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xmlns:p="http://www.springframework.org/schema/p" xmlns:mvc="http://www.springframework.org/schema/mvc"
	   xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd">

	<description>Spring MVC Configuration</description>

	<!-- Activation Spring's Annotation -->
	<context:annotation-config />
	<context:property-placeholder	ignore-unresolvable="true" location="classpath:config/**/cfg-app.properties" />

	<!-- 扫描包 -->
	<context:component-scan base-package="com.aldb.gateway"	use-default-filters="false">
		<context:include-filter type="annotation"	expression="org.springframework.stereotype.Controller" />
	</context:component-scan>
	<!-- <aop:config proxy-target-class="true"/> <aop:aspectj-autoproxy proxy-target-class="true"/> -->


	<!-- 默认的注解映射的支持，org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping -->
	<mvc:annotation-driven	content-negotiation-manager="contentNegotiationManager" />

	<!-- 内容协商管理器 -->
	<!--1、首先检查路径扩展名（如my.pdf）；2、其次检查Parameter（如my?format=pdf）；3、检查Accept Header -->
	<!-- REST中根据URL后缀自动判定Content-Type及相应的View -->
	<bean id="contentNegotiationManager"
		class="org.springframework.web.accept.ContentNegotiationManagerFactoryBean">
		<!-- 扩展名至mimeType的映射,即 /user.json => application/json -->
		<property name="favorPathExtension" value="true" />
		<!-- 用于开启 /userinfo/123?format=json 的支持 -->
		<property name="favorParameter" value="true" />
		<property name="parameterName" value="format" />
		<!-- 是否忽略Accept Header -->
		<property name="ignoreAcceptHeader" value="false" />
		<property name="mediaTypes">
			<map>
				<entry key="xml" value="application/xml" />
				<entry key="json" value="application/json" />
				<entry key="html" value="text/html" />
			</map>
		</property>
	</bean>

	<!-- ========================= VIEW定义 ========================= -->
	<!-- 内容协商视图解析器；根据客户端的不同的请求决定不同的 view进行响应, 如 /blog/1.json /blog/1.xml -->
	<!-- 会自动根据解析的contentType来决定使用哪个视图解析器（默认使用整个web应用中的viewResolver） -->
	<bean	class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver"	 p:order="0">
		<!-- 内容协商管理器 用于决定media type -->
		<property name="contentNegotiationManager" ref="contentNegotiationManager" />
		<!-- 默认视图 放在解析链最后 -->
		<property name="defaultViews">
			<list>
				<!-- <bean class="org.springframework.web.servlet.view.json.MappingJackson2JsonView"/> -->
				<bean class="com.alibaba.fastjson.support.spring.FastJsonJsonView" />
				<!--<bean class="org.springframework.web.servlet.view.xml.MarshallingView"/> -->
			</list>
		</property>
	</bean>

	<!-- 拦截器配置 -->
	<mvc:interceptors>
		<bean id="localeChangeInterceptor" class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor">
			<property name="paramName" value="lang"/>
		</bean>
	</mvc:interceptors>

	<!-- 使用cookie处理国际化 -->
	<bean id="localeResolver" class="org.springframework.web.servlet.i18n.CookieLocaleResolver">
		<property name="cookieName" value="clientlanguage"/>
		<property name="cookieMaxAge" value="94608000"/>
		<property name="defaultLocale" value="zh"/>
	</bean>

	<!-- <bean id="localeResolver" class="org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver"/> -->

	<!-- 国际化的消息资源文件（本系统中主要用于显示/错误消息定制） -->
	<bean id="messageSource"
		class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
		<property name="basenames">
			<list>
				<!-- 在web环境中一定要定位到classpath 否则默认到当前web应用下找 -->
				<value>classpath:i18n/osp-web-msg</value>
				<value>classpath*:org/hibernate/validator/ValidationMessages</value>
			</list>
		</property>
		<property name="useCodeAsDefaultMessage" value="false" />
		<property name="defaultEncoding" value="UTF-8" />
		<property name="cacheSeconds" value="60" />
	</bean>

	<!-- 视图文件解析配置 -->
	<bean id="defaultViewResolver"
		class="org.springframework.web.servlet.view.InternalResourceViewResolver"
		p:order="1">
		<property name="prefix" value="${web.view.prefix}" />
		<property name="suffix" value="${web.view.suffix}" />
	</bean>

	<!-- 对静态资源文件的访问， 将无法mapping到Controller的path交给default servlet handler处理
	<mvc:default-servlet-handler />  -->

	<!-- 定义无Controller的path<->view直接映射 <mvc:view-controller path="/" view-name="redirect:${web.view.index}"/> -->

	<!-- Controller统一异常处理 -->
	<bean id="exceptionHandler" class="com.aldb.gateway.exception.OpenApiExceptionHandler" />

	<!-- Spring mvc 拦截器-->
	<mvc:interceptors>
		<mvc:interceptor>
			<!--
				/**的意思是所有文件夹及里面的子文件夹
				/*是所有文件夹，不含子文件夹
				/是web项目的根目录
			-->
			<mvc:mapping path="/**" />
			<bean	class="com.aldb.gateway.interceptor.OpenApiServiceParamValidateInterceptor" />
		</mvc:interceptor>
	</mvc:interceptors>


</beans>